# Homeownership market {#sec-market-homeown}

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

source("_common.R")

# Load packages other than tidyverse and hdatools
# 
library(scales)
library(sf)
library(ggtext)
library(hdatools)


```

```{r}
#| label: sales-map
#| fig-cap: "Map of total homes sales from 2020 through April 2024"

# Create a hex grid map showing home sale concentrations in FAAR region.

library(leaflet)
library(sf)
library(geojsonio)
library(classInt)

# sales <- read_rds("data/faar_mls_cpi_google.rds") |>
#   mutate(longitude = case_when(
#     mls_number == "630778" ~ -78.329369,
#     TRUE ~ longitude)) |>
#   mutate(latitude = case_when(
#     mls_number == "630778" ~ 38.214775,
#     TRUE ~ latitude)) |>
#   mutate(longitude = case_when(
#     mls_number == "VAOR2002600" ~ -78.181042,
#     TRUE ~ longitude)) |>
#   mutate(latitude = case_when(
#     mls_number == "VAOR2002600" ~ 38.137717,
#     TRUE ~ latitude)) |>
#   filter(mls_number != "606389") |>  # This entry is incorrectly marked as being in Spotsylvania County
#   st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
# 
# 
# write_rds(sales, "data/faar_mls_check.rds")
# geojson_write(sales, file = "data/mls.geojson")
# 


sales <- read_rds("data/faar_mls_check.rds")

# leaflet(sales) |> 
#   addProviderTiles(providers$CartoDB.Positron) |> 
#   addCircleMarkers()

hex_grid <- st_make_grid(sales, n = c(50,50),
                         what = "polygons", square = FALSE)

hex_grid_sf <- st_sf(hex_grid) %>% 
  mutate(grid_id = 1:length(lengths(hex_grid)))

hex_grid_sf$n_pts <- lengths(st_intersects(hex_grid_sf, sales))

hex_count <- filter(hex_grid_sf, n_pts > 0)

palette <- colorBin('Greens', domain = hex_count$n_pts, bins = 9)

quantiles <- classIntervals(hex_count$n_pts, n=7, style='quantile')
palette_quantiles <- colorBin('Greens', domain = hex_count$n_pts, bins=quantiles$brks, pretty=FALSE)


leaflet(hex_count) |> 
  addProviderTiles(providers$CartoDB.Positron) |> 
  addPolygons(
    fillColor = ~palette_quantiles(n_pts),
    fillOpacity = 0.7,
    opacity = 1,
    weight = 1,
    color='white',
    label = ~as.character(n_pts),  # Show n_pts value when hovered over
    highlightOptions = highlightOptions(
      weight = 3,
      color = '#666',
      fillOpacity = 0.7,
      bringToFront = TRUE
    ),
    popup = ~paste("n_pts:", n_pts)  # Show n_pts value on click
  ) |> 
  addLegend(
    pal = palette_quantiles,
    values = ~n_pts,
    title = "Number of Sales",
    position = "bottomleft"
  )



```

```{r}
#| label: price-line
#| fig-cap: "Median sales price"

# Create a bar chart showing the number of home sales per quarter. Fill bar stacks based on jurisdiction.

sales_price <- read_rds("data/faar_mls_check.rds")  |> 
  mutate(type = case_when(
    new_construction_yn == "Yes" ~ "New Construction",
    TRUE ~ "Resale"
  )) |>  
  select(quarter, type, adj_sales) |> 
  st_drop_geometry() |> 
  group_by(quarter, type) |> 
  summarise(med_sales = median(adj_sales))


title_text <- "<span style = 'color:#011E41'><b>New Construction</b></span> and <span style = 'color:#40C0C0'><b>Resale</span> by quarter"

ggplot(sales_price,
       aes(x = quarter,
           y = med_sales,
           color = type)) +
  geom_line(size = 1) +
  geom_point() +
  scale_color_hfv()

```

```{r}
#| label: type-bar
#| fig-cap: "Total sales"

# Create a bar chart showing the number of home sales per quarter. Fill bar stacks based on jurisdiction.

sales_type <- read_rds("data/faar_mls_check.rds") |> 
  mutate(type = case_when(
    new_construction_yn == "Yes" ~ "New Construction",
    TRUE ~ "Resale"
  )) |> 
  mutate(quarter = zoo::as.yearqtr(quarter)) |> 
  group_by(type, quarter) |> 
  summarise(count = n_distinct(mls_number))

title_text <- "<span style = 'color:#011E41'><b>New Construction</b></span> and <span style = 'color:#40C0C0'><b>Resale</span> by quarter"

ggplot(sales_type,
       aes(x = quarter,
           y = count,
           fill = type)) +
  geom_col(position = "stack") +
  theme_hfv(base_size = 10) +
  scale_fill_hfv() +
  labs(title = title_text)

```
```{r}
#| label: dom-bar
#| fig-cap: "Days on Market"

# Create a bar chart showing the number of home sales per quarter. Fill bar stacks based on jurisdiction.

sales_dom <- read_rds("data/faar_mls_check.rds") |> 
  mutate(type = case_when(
    new_construction_yn == "Yes" ~ "New Construction",
    TRUE ~ "Resale"
  )) |> 
  select(quarter, cdom, type) |> 
  filter(cdom != 0) |> 
  group_by(quarter, type) |> 
  summarise(med_dom = median(cdom))

title_text <- "<span style = 'color:#011E41'><b>New Construction</b></span> and <span style = 'color:#40C0C0'><b>Resale</span> by quarter"

ggplot(sales_dom,
       aes(x = quarter,
           y = med_dom,
           fill = type)) +
  geom_col(position = "dodge") +
  theme_hfv(base_size = 10) +
  scale_fill_hfv() +
  labs(title = title_text)

```
```{r}
#| label: sf-plot
#| fig-cap: "Square Footage"

# Create a bar chart showing the number of home sales per quarter. Fill bar stacks based on jurisdiction.

sales_sf <- read_rds("data/faar_mls_check.rds") |> 
  mutate(type = case_when(
    new_construction_yn == "Yes" ~ "New Construction",
    TRUE ~ "Resale"
  )) |> 
  select(total_finished_sqft, type) |> 
  filter(total_finished_sqft != 0)

title_text <- "<span style = 'color:#011E41'><b>New Construction</b></span> and <span style = 'color:#40C0C0'><b>Resale</span> by quarter"


ggplot(sales_sf, 
       aes(x = total_finished_sqft,
           fill = type)) +
  geom_histogram(binwidth = 100, 
                 alpha = 0.7, 
                 position = 'identity') +
  facet_wrap(~type) +
  labs(title = "Distribution of Square Footage by Home Type",
       x = "Square Footage",
       y = "Count")

```
```{r}
#| label: lot-plot
#| fig-cap: "Lot Size"

# Create a bar chart showing the number of home sales per quarter. Fill bar stacks based on jurisdiction.

sales_lot <- read_rds("data/faar_mls_check.rds") |> 
  mutate(type = case_when(
    new_construction_yn == "Yes" ~ "New Construction",
    TRUE ~ "Resale"
  )) |> 
  select(lot_size_acres, type) |> 
  filter(lot_size_acres != 0) |> 
  filter(lot_size_acres < 10)

title_text <- "<span style = 'color:#011E41'><b>New Construction</b></span> and <span style = 'color:#40C0C0'><b>Resale</span> by quarter"


ggplot(sales_lot, 
       aes(x = lot_size_acres,
           fill = type)) +
  geom_density() +
  labs(title = "Distribution of Lot Size by Home Type",
       x = "Acres",
       y = "Count")

```




