# Current gaps {#sec-gaps-current}

```{r}
#| label: setup
#| echo: false
#| message: false
#| warning: false

source("_common.R")

# Load packages other than tidyverse and hdatools
# 
library(scales)
library(ggtext)

```


```{r}

# The data visualization below shows the cumulative change in households by tenure since 2010. 


tenure <- read_rds("data/b25003.rds") |> 
  filter(NAME != "Orange County, VA") |> 
  group_by(year, tenure) |> 
  summarise(estimate = sum(estimate)) |> 
  ungroup() |> 
  group_by(tenure) |> 
  mutate(cum_chg = estimate - first(estimate)) |> 
  filter(estimate > 0 )

title_text <- 

ggplot(tenure,
       aes(x = year,
           y = cum_chg,
           fill = tenure)) +
  geom_col() +
  facet_wrap(~tenure) +
  scale_fill_hda() +
  scale_y_continuous(labels = number_format(big.mark = ",")) +
  labs(title = "Change in households by tenure",
       subtitle = "Cumulative change since 2010",
       caption = "Source: U.S. Census Bureau, ACS 5-Year Estimates, Table B25003.") +
  theme_hda(base_size = 10)
  
  



```

```{r}

income <- read_rds("data/b25118.rds") |> 
  filter(NAME != "Orange County") |> 
  group_by(year, tenure, income) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(year == 2010 | year == 2022)

level_order <- c("Less than $15,000", "$15,000 to $24,999", "$25,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")


ggplot(income,
       aes(x = factor(income, level = level_order),
           y = estimate,
           fill = tenure)) +
  geom_col(position = "dodge") +
  facet_grid(year~tenure) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = label_comma()) +
  labs(title = "Households by income and tenure",
       subtitle = "2010 versus 2021",
       caption = "**Source:** U.S. Census Bureau, ACS 5-year estimates, Table B25118.") +
  scale_fill_hda() +
  theme_hda(base_size = 10) +
  theme(axis.text.x = element_text(angle = 90, vjust = .2, size = 8))



```

```{r}

pums_join <- read_rds("data/faar_pums_join.rds")

pums_med_inc <- pums_join |> 
  mutate(hh_size = case_when(
    NP == 1 ~ 1,
    NP == 2 ~ 2,
    NP == 3 ~ 3, 
    NP == 4 ~ 4,
    TRUE ~ 5
  )) |> 
  mutate(hh_size = as.character(hh_size),
         hh_size = case_when(
           hh_size == "5" ~ "5 or more",
           TRUE ~ hh_size
         )) |> 
  filter(SPORDER == 1) |> 
  filter(tenure != "NA") |> 
  mutate(inc = ADJINC*HINCP) |> 
  group_by(hh_size, tenure) |> 
  summarise(med_inc = weighted.median(inc, WGTP, na.rm = TRUE))

title_text <- "<span style = 'color:#8baeaa'><b>Renter</b></span> and <span style = 'color:#445ca9'><b>homeowner</span> income by household size"
ggplot(pums_med_inc,
       aes(y = med_inc,
           x = hh_size,
           fill = tenure)) +
  geom_col(position = "dodge") +
  theme_hda(base_size = 10) +
  scale_y_continuous(labels = dollar_format()) +
  scale_fill_hda() +
  labs(title = title_text,
       caption = "Source: U.S. Census Bureau, ACS 5-Year Estimates, PUMS Microdata.")


```

```{r}

pums_join <- read_rds("data/faar_pums_join.rds")

pums_med_inc <- pums_join |> 
  mutate(hh_age = case_when(
    HHLDRAGEP < 25 ~ "Under 25 years",
    HHLDRAGEP >= 25 & HHLDRAGEP <=44 ~ "25 to 44 years",
    HHLDRAGEP >= 45 & HHLDRAGEP <= 64 ~ "45 to 64 years",
    HHLDRAGEP >= 65  ~ "65 years and over",
  )) |>
  filter(SPORDER == 1) |> 
  filter(tenure != "NA") |> 
  mutate(inc = ADJINC*HINCP) |> 
  group_by(hh_age, tenure) |> 
  summarise(med_inc = weighted.median(inc, WGTP, na.rm = TRUE))


age_order <- c("Under 25 years", "25 to 44 years", "45 to 64 years", "65 years and over")
pums_med_inc$hh_age <- factor(pums_med_inc$hh_age, levels = age_order)

ggplot(pums_med_inc,
       aes(y = med_inc,
           x = hh_age,
           fill = tenure)) +
  geom_col(position = "dodge") +
  theme_hda(base_size = 10) +
  scale_y_continuous(labels = dollar_format())  +
  scale_fill_hda() +
  labs(title = title_text,
       caption = "Source: U.S. Census Bureau, ACS 5-Year Estimates, PUMS Microdata.")

```


```{r}

supply_demand <- read_rds("data/fxburg_supply_demand.rds")

ami_order <- factor(supply_demand$ami, levels = c("30% AMI or below", "31-50% AMI",
                                           "51-80% AMI", "81-100% AMI", "101-120% AMI",
                                           "121% AMI and greater"))


title_text <- "<span style = 'color:#8baeaa'><b>Supply</b></span> and <span style = 'color:#445ca9'><b>Demand</span> in the region"



ggplot(supply_demand,
       aes(x = reorder(ami_order, desc(ami_order)),
           y = estimate,
           fill = value)) +
  geom_col(position = "dodge") +
  facet_wrap(~tenure) +
  theme_hda(base_size = 10) +
  scale_fill_hda() +
  coord_flip() +
  labs(title = title_text)


```

```{r}
## Create a bar graph showing the distribution of households by tenure. Focus on showing the change in households by tenure in terms of percent change from 2019 to 2022.

# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)

# Read and process the data
tenure_data <- read_rds("data/b25003_project.rds")

# Filter for the years 2019 to 2022 and select necessary columns
tenure_filtered <- tenure_data |> 
  filter(year %in% c(2019, 2020, 2021, 2022)) |> 
  select(year, tenure, estimate)

# Calculate year-to-year percent changes
tenure_percent_change <- tenure_filtered |> 
  pivot_wider(names_from = year, values_from = estimate) |> 
  mutate(
    change_2020 = ((`2020` - `2019`) / `2019`) * 100,
    change_2021 = ((`2021` - `2020`) / `2020`) * 100,
    change_2022 = ((`2022` - `2021`) / `2021`) * 100
  ) |> 
  select(tenure, change_2020, change_2021, change_2022) |> 
  pivot_longer(cols = starts_with("change"), names_to = "year", values_to = "percent_change") |> 
  mutate(year = case_when(
    year == "change_2020" ~ "2020",
    year == "change_2021" ~ "2021",
    year == "change_2022" ~ "2022"
  ))

# Plotting the data
ggplot(tenure_percent_change, aes(x = year, y = percent_change, fill = tenure)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_hda(base_size = 10) +  # Apply custom theme
  scale_fill_hda() +           # Apply custom scale
  labs(title = "Year-to-Year Percent Change in Households by Tenure (2019-2022)",
       x = "Year",
       y = "Percent Change (%)",
       fill = "Tenure") +
  geom_text(aes(label = round(percent_change, 1)), position = position_dodge(width = 0.9), vjust = -0.5)



```

```{r}
##B25007: Tenure by Age of Householder - 

##Create a bar chart showing the change in households by tenure and age of household from 2019 to 2022. Group by Under 25 years, 25 to 44 years, 45 to 64 years, and 65 years and over. Aggregate to the regional level. This should help to show household formation trends among renters and homeowners.

## First make an RDS file for b25007

#| label: fig-age
#| fig-cap: "Change in households by age and tenure"

b25007_data <- read_rds("data/b25007_data.rds")

FAAR_age <- b25007_data |> 
  group_by(NAME, year, tenure, age) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  select(tenure, age, `2019`, `2022`) |> 
  transform(change = `2022` - `2019`) |> 
  group_by(NAME, tenure, age) |> 
  summarise(change = sum(change)) |> 
  mutate(age = fct_relevel(age, "Under 25 years old")) |> 
  group_by(tenure, age) |> 
  summarise(change = sum(change))

subtitle_text <- "Change in <span style = 'color:#011E41'><b>homeowners</b></span> and <span style = 'color:#40C0C0'><b>renters</b></span> from 2010 to 2021"

FAAR_age_plot <- ggplot(cv_age,
       aes(x = tenure, 
           y = change,
           fill = tenure,
           data_id = change,
           tooltip = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")(change)))  +
  facet_wrap(~age, nrow =1) +
  geom_col(position = "dodge") +
  geom_col_interactive(size = 2) +
  theme_hda() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_y_continuous(labels = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")) +
  theme(axis.text.x = element_blank()) +
  labs(title = "Change in households by age",
       subtitle = subtitle_text,
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25007.") +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    )))


```


```{r}
##BLS: Top 5 Occupations and Annual Wage

## Create a text chart that shows the top five occupations in the region with their respective annual wage.

# Load libraries
library(dplyr)
library(ggplot2)

# transform column titles 

occupation_data <- oews_data %>%
  rename(
    occupation = occ_title,
    employees_2023 = tot_emp_2023, 
    employees_2020 = tot_emp_2020 
  )

# Aggregate data by occupation
aggregated_data <- occupation_data %>%
  group_by(occupation) %>%
  summarise(
    employees_2023 = sum(employees_2023, na.rm = TRUE),
    employees_2020 = sum(employees_2020, na.rm = TRUE),
    a_median_2023 = mean(a_median_2023, na.rm = TRUE),  
    a_median_2020 = mean(a_median_2020, na.rm = TRUE)   
  )

# Calculate average number of employees

aggregated_data <- aggregated_data %>%
  mutate(average_employees = (employees_2023 + employees_2020) / 2)


# Get top five occupations by total employed
 
top_occupations <- aggregated_data %>%
  arrange(desc(average_employees)) %>%
  slice_head(n = 5)

# Calculate affordability for top occupations
# Define a sample affordcalc function for illustration

affordcalc <- function(annual_wage, type) {
  if (type == "rent") {
    return(annual_wage * 0.3 / 12)  # 30% of monthly income for rent
  } else if (type == "sale") {
    return(annual_wage * 3)  # Assuming 3 times annual income for home price
  }
}

# Calculate 2023 affordability for top occupations
affordability <- top_occupations %>%
  mutate(
    affordable_rent = affordcalc(a_median_2023, "rent"),
    affordable_sale = affordcalc(a_median_2023, "sale")
  )

# Create a text chart  
text_chart <- affordability %>%
  mutate(
    text = paste0(
      "Occupation: ", occupation, "\n",
      "Median Wage 2023: $", round(a_median_2023, 2), "\n",
      "Affordable Rent: $", round(affordable_rent, 2), "\n",
      "Affordable Sale: $", round(affordable_sale, 2)
    )
  ) %>%
  pull(text) %>%
  paste(collapse = "\n\n")

# Print the text chart
cat(text_chart)

```

```{r}

```

